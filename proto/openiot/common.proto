
syntax = "proto3";
package openiot;

message Header {
    // Unique (at least at given local network) device ID. It must always
    // be un-encrypted to let device/controller find decryption key.
    // Should also match Message.device_id
    uint64 device_id = 1;
    // Encryption parameters
    oneof encryption {
        bool plain = 5;
        bytes aes_iv = 6;
    }
}

message Message {
    // The same device id as in unencrypted Header.
    // Serves mostly to validate successful decryption.
    uint64 device_id = 1;
    // Auto-incremented sequence number to drop duplicates
    // Even if device / controller will be sending
    // updates every second - counter will last in about 136 years
    uint32 sequence = 2;
    
    // Next 2 fiels basically implements google.protobuf.Any idea:
    // name (URL) and serialized value.
    // The reason why it is not used here - it is complicates nanopb.

    // Name must be in format of:
    //      package_name.message_name
    // e.g.
    // openiot.SystemJoinRequest
    string name = 3;
    // Serialized bytes of the message
    bytes value = 4;
}
