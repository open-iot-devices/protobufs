/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_DEVICES_COMMON_PB_H_INCLUDED
#define PB_DEVICES_COMMON_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _devices_MessageType {
    devices_MessageType_REGULAR = 0,
    devices_MessageType_JOIN_REQUEST = 5,
    devices_MessageType_JOIN_RESPONSE_OFFER = 6,
    devices_MessageType_JOIN_REQUEST_ACCEPT = 7,
    devices_MessageType_JOIN_RESPONSE_ACK = 8,
    devices_MessageType_LEAVE_REQUEST = 10,
    devices_MessageType_LEAVE_RESPONSE_ACK = 11
} devices_MessageType;
#define _devices_MessageType_MIN devices_MessageType_REGULAR
#define _devices_MessageType_MAX devices_MessageType_LEAVE_RESPONSE_ACK
#define _devices_MessageType_ARRAYSIZE ((devices_MessageType)(devices_MessageType_LEAVE_RESPONSE_ACK+1))

/* Struct definitions */
typedef struct _devices_Message {
    uint64_t device_id;
    uint32_t sequence;
    devices_MessageType type;
    pb_callback_t details;
/* @@protoc_insertion_point(struct:devices_Message) */
} devices_Message;


/* Initializer values for message structs */
#define devices_Message_init_default             {0, 0, _devices_MessageType_MIN, {{NULL}, NULL}}
#define devices_Message_init_zero                {0, 0, _devices_MessageType_MIN, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define devices_Message_device_id_tag            1
#define devices_Message_sequence_tag             2
#define devices_Message_type_tag                 3
#define devices_Message_details_tag              4

/* Struct field encoding specification for nanopb */
#define devices_Message_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT64, device_id, 1) \
X(a, STATIC, SINGULAR, UINT32, sequence, 2) \
X(a, STATIC, SINGULAR, UENUM, type, 3) \
X(a, CALLBACK, SINGULAR, BYTES, details, 4)
#define devices_Message_CALLBACK pb_default_field_callback
#define devices_Message_DEFAULT NULL

extern const pb_msgdesc_t devices_Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define devices_Message_fields &devices_Message_msg

/* Maximum encoded size of messages (where known) */
/* devices_Message_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
