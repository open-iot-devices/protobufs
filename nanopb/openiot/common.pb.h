/* Automatically generated nanopb header */
/* Generated by 0.4.1-dev */

#ifndef PB_OPENIOT_OPENIOT_COMMON_PB_H_INCLUDED
#define PB_OPENIOT_OPENIOT_COMMON_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Header {
    uint64_t device_id;
    pb_size_t which_encryption;
    union {
        bool plain;
        pb_byte_t aes_iv[16];
    } encryption;
} Header;

typedef struct _Message {
    uint32_t sequence;
    pb_size_t names_count;
    char names[2][32];
} Message;


/* Initializer values for message structs */
#define Header_init_default                      {0, 0, {0}}
#define Message_init_default                     {0, 0, {"", ""}}
#define Header_init_zero                         {0, 0, {0}}
#define Message_init_zero                        {0, 0, {"", ""}}

/* Field tags (for use in manual encoding/decoding) */
#define Header_plain_tag                         5
#define Header_aes_iv_tag                        6
#define Header_device_id_tag                     1
#define Message_sequence_tag                     1
#define Message_names_tag                        2

/* Struct field encoding specification for nanopb */
#define Header_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   device_id,         1) \
X(a, STATIC,   ONEOF,    BOOL,     (encryption,plain,encryption.plain),   5) \
X(a, STATIC,   ONEOF,    FIXED_LENGTH_BYTES, (encryption,aes_iv,encryption.aes_iv),   6)
#define Header_CALLBACK NULL
#define Header_DEFAULT NULL

#define Message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sequence,          1) \
X(a, STATIC,   REPEATED, STRING,   names,             2)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL

extern const pb_msgdesc_t Header_msg;
extern const pb_msgdesc_t Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Header_fields &Header_msg
#define Message_fields &Message_msg

/* Maximum encoded size of messages (where known) */
#define Header_size                              29
#define Message_size                             72

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
